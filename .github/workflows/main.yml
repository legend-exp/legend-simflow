name: legend-simflow

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - "releases/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: 3

jobs:
  pre-commit:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v6
        with:
          python-version: "3.x"
      - name: Set up Julia
        uses: julia-actions/setup-julia@v2
        with:
          version: "1.10"
      - name: Set up JuliaFormatter
        run: julia -e 'using Pkg; Pkg.add("JuliaFormatter")'
      - uses: pre-commit/action@v3.0.1
        with:
          extra_args: --all-files --show-diff-on-failure

  unit-tests:
    name: Run legend-simflow unit tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13"]
        os: [ubuntu-latest, macos-13]

    steps:
      - uses: actions/checkout@v5
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
      - name: Get dependencies and install legend-simflow
        run: |
          python -m pip install --upgrade pip wheel setuptools
          python -m pip install --upgrade .[test]
      - name: Run unit tests
        run: |
          python -m pytest

  test-coverage:
    name: Calculate and upload test coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 2
      - uses: actions/setup-python@v6
        with:
          python-version: "3.12"

      - name: Generate Report
        run: |
          python -m pip install --upgrade pip wheel setuptools
          python -m pip install --upgrade .[test]
          python -m pytest --cov=legendsimflow --cov-report=xml
      - name: Upload Coverage to codecov.io
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
